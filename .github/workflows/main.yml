on: [push]

  
env:
  USER: ${{ secrets.REGISTRY_USERNAME }}
  TOKEN: ${{ secrets.REGISTRY_PASSWORD }}
  REPOSITORY: ${{ secrets.ACR_INSTANCE }}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-and-publish-docker-image:
    name: Build and Publish Docker Image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
    
  # Connect to Azure Container registry (ACR)
      - name: Build and Publish Docker Image
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.ACR_INSTANCE }}.azurecr.io
          username: ${{ secrets.REGISTRY_USERNAME }} 
          password: ${{ secrets.REGISTRY_PASSWORD }}
    
    # Container build and push to a Azure Container registry (ACR)
      - run: |
          docker build . -t ${{ secrets.ACR_INSTANCE }}.azurecr.io/test-demo:${{ github.sha }}
          docker push ${{ secrets.ACR_INSTANCE }}.azurecr.io/test-demo:${{ github.sha }}
      
  build-and-push-helm-chart:
    name: Build and Push Helm Chart
    runs-on: ubuntu-latest
    needs: [build-and-publish-docker-image]
    steps:
    - uses: actions/checkout@master

    - name: Helm Repo Add
      run: |
        helm repo add ${{ secrets.ACR_INSTANCE }} https://${{ secrets.ACR_INSTANCE }}.azurecr.io/helm/v1/repo --username ${{ secrets.REGISTRY_USERNAME }} --password ${{ secrets.REGISTRY_PASSWORD }}
      env:
        HELM_EXPERIMENTAL_OCI: 1

    - name: Helm Chart Save
      run: |
        helm package ./charts/sample_chart
        helm registry login demoaksnov.azurecr.io --username demoaksnov --password O3qhiTvsIWaxipXqJ3nbdKX5+lp/xqxU
        #helm registry login ${{ secrets.ACR_INSTANCE }} --username ${{ secrets.REGISTRY_USERNAME }} --password ${{ secrets.REGISTRY_PASSWORD }}
         #helm package  . test-image:v${{ github.run_id }}
        helm push webfront-0.1.0.tgz  oci://demoaksnov.azurecr.io/test-demo
        # list out saved charts
        #helm package list
      env:
        HELM_EXPERIMENTAL_OCI: 1

    #- name: Helm Chart Push
    #  run: |
     #   helm registry login ${{ secrets.ACR_INSTANCE }} --username ${{ secrets.ACR_USER }} --password ${{ secrets.ACR_SECRET }}
      #  helm package push ${{ secrets.ACR_INSTANCE }}/helm/${{ secrets.IMAGE_NAME }}:v${{ github.run_id }}
     # env:
       # HELM_EXPERIMENTAL_OCI: 1
        
  aks-deployment:
    name: AKS Deployment
    runs-on: ubuntu-latest
    needs: [build-and-publish-docker-image,build-and-push-helm-chart]
    steps:
    - uses: actions/checkout@master

    - name: kubeconfig
      run: echo "${{ secrets.KUBECONFIG }}" >> kubeconfig

    - name: Helm Repo Add
      run: |
        helm repo add ${{ secrets.ACR_INSTANCE }} https://${{ secrets.ACR_INSTANCE }}.azurecr.io/helm/v1/repo --username ${{ secrets.REGISTRY_USERNAME }} --password ${{ secrets.REGISTRY_PASSWORD }}
        helm repo update
      env:
        HELM_EXPERIMENTAL_OCI: 1

    - name: Helm Upgrade
      run: |
        mkdir upgrade
        helm registry login demoaksnov.azurecr.io --username demoaksnov --password O3qhiTvsIWaxipXqJ3nbdKX5+lp/xqx
        #docker pull demoaksnov.azurecr.io/webfront:v1
        helm package pull ${{ secrets.ACR_INSTANCE }}/test-demo/${{ secrets.IMAGE_NAME }}:v${{ github.run_id }}
        helm package export ${{ secrets.ACR_INSTANCE }}/test-demo/${{ secrets.REGISTRY_USERNAME }}:v${{ github.run_id }} --destination .\upgrade
        helm upgrade ${{ secrets.IMAGE_NAME }} .\upgrade\${{ secrets.IMAGE_NAME }} -i
      env:
        KUBECONFIG: '.\kubeconfig'
        HELM_EXPERIMENTAL_OCI: 1
