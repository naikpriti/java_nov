name: Build Windows Container Image

on:
  push:
    branches: [ deploy-to-k8s ]
  pull_request:
    branches: [ deploy-to-k8s ]
  workflow_dispatch:
  
env:
  dockerfilePath: 'naikpriti/javatest/Dockerfile'
  USER: ${{ secrets.REGISTRY_USERNAME }}
  TOKEN: ${{ secrets.REGISTRY_PASSWORD }}
  REPOSITORY: ${{ secrets.ACR_INSTANCE }}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-and-publish-docker-image:
    name: Build and Publish Docker Image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
    
      - name: Build and push an image to container registry
        run: |
          docker login $env:REPOSITORY -u $env:USER -p $env:TOKEN
          docker build --file=$env:dockerfilePath -t ${{ secrets.ACR_INSTANCE }}/${{ secrets.IMAGE_NAME }}:${{ github.run_id }} -t ${{ secrets.ACR_INSTANCE }}/${{ secrets.IMAGE_NAME }}:latest .
          docker image push --all-tags ${{ secrets.ACR_INSTANCE }}/${{ secrets.IMAGE_NAME }}
          docker logout
  build-and-push-helm-chart:
    name: Build and Push Helm Chart
    runs-on: ubuntu-latest
    needs: [build-and-publish-docker-image]
    steps:
    - uses: actions/checkout@master

    - name: Helm Repo Add
      run: |
        helm repo add ${{ secrets.ACR_INSTANCE }} https://${{ secrets.ACR_INSTANCE }}/helm/v1/repo --username ${{ secrets.ACR_USER }} --password ${{ secrets.ACR_SECRET }}
      env:
        HELM_EXPERIMENTAL_OCI: 1

    - name: Helm Chart Save
      run: |
        cd .\charts\mvcmusicstoreweb
        helm chart save . ${{ secrets.IMAGE_NAME }}:v${{ github.run_id }}
        helm chart save . ${{ secrets.ACR_INSTANCE }}/helm/${{ secrets.IMAGE_NAME }}:v${{ github.run_id }}
        # list out saved charts
        helm chart list
      env:
        HELM_EXPERIMENTAL_OCI: 1

    - name: Helm Chart Push
      run: |
        helm registry login ${{ secrets.ACR_INSTANCE }} --username ${{ secrets.ACR_USER }} --password ${{ secrets.ACR_SECRET }}
        helm chart push ${{ secrets.ACR_INSTANCE }}/helm/${{ secrets.IMAGE_NAME }}:v${{ github.run_id }}
      env:
        HELM_EXPERIMENTAL_OCI: 1
        
  aks-deployment:
    name: AKS Deployment
    runs-on: ubuntu-latest
    needs: [build-and-publish-docker-image,build-and-push-helm-chart]
    steps:
    - uses: actions/checkout@master

    - name: kubeconfig
      run: echo "${{ secrets.KUBECONFIG }}" >> kubeconfig

    - name: Helm Repo Add
      run: |
        helm repo add ${{ secrets.ACR_INSTANCE }} https://${{ secrets.ACR_INSTANCE }}/helm/v1/repo --username ${{ secrets.ACR_USER }} --password ${{ secrets.ACR_SECRET }}
        helm repo update
      env:
        HELM_EXPERIMENTAL_OCI: 1

    - name: Helm Upgrade
      run: |
        mkdir upgrade
        helm registry login ${{ secrets.ACR_INSTANCE }} --username ${{ secrets.ACR_USER }} --password ${{ secrets.ACR_SECRET }}
        helm chart pull ${{ secrets.ACR_INSTANCE }}/helm/${{ secrets.IMAGE_NAME }}:v${{ github.run_id }}
        helm chart export ${{ secrets.ACR_INSTANCE }}/helm/${{ secrets.IMAGE_NAME }}:v${{ github.run_id }} --destination .\upgrade
        helm upgrade ${{ secrets.IMAGE_NAME }} .\upgrade\${{ secrets.IMAGE_NAME }} -i
      env:
        KUBECONFIG: '.\kubeconfig'
        HELM_EXPERIMENTAL_OCI: 1
